## influxdb image version
## ref: https://hub.docker.com/r/library/influxdb/tags/
image:
  repository: "influxdb"
  tag: "1.8.6-alpine"
  pullPolicy: IfNotPresent
  ## If specified, use these secrets to access the images
  # pullSecrets:
  #   - registry-secret

enterprise:
  enabled: false
serviceAccount:
  create: true
  name:
  annotations: {}

livenessProbe: {}
readinessProbe: {}
startupProbe:
  enabled: false

## Specify a service type
## NodePort is default
## ref: http://kubernetes.io/docs/user-guide/services/
##
service:
  ## Add annotations to service
  # annotations: {}
  type: ClusterIP
  # externalIPs: []
  # externalTrafficPolicy: ""

## Persist data to a persistent volume
##
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  ## influxdb data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "nfs"
  annotations:
  accessMode: ReadWriteOnce
  size: 100Gi


## Create default user through Kubernetes job
## Defaults indicated below
##
setDefaultUser:
  enabled: true

  ## Image of the container used for job
  ## Default: appropriate/curl:latest
  ##
  image: appropriate/curl:latest

  ## Deadline for job so it does not retry forever.
  ## Default: activeDeadline: 300
  ##
  activeDeadline: 300

  ## Specify the number of retries before considering job as failed.
  ## https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#pod-backoff-failure-policy
  ##
  backoffLimit: 6

  ## Hook delete policy for helm.
  ## Default: hookDeletePolicy: hook-succeeded
  ##
  hookDeletePolicy: hook-succeeded

  ## Restart policy for job
  ## Default: OnFailure
  restartPolicy: OnFailure

  user:

    ## The user name
    ## Default: "admin"
    username: "admin"

    ## User password
    ## single quotes must be escaped (\')
    ## Default: (Randomly generated 10 characters of AlphaNum)
    password: "password"

    ## The user name and password are obtained from an existing secret. The expected
    ## keys are `influxdb-user` and `influxdb-password`.
    ## If set, the username and password values above are ignored.
    #existingSecret: influxdb-auth

    ## User privileges
    ## Default: "WITH ALL PRIVILEGES"
    privileges: "WITH ALL PRIVILEGES"

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources: {}
#  requests:
#    memory: 256Mi
#    cpu: 0.1
#  limits:
#    memory: 16Gi
#    cpu: 8

# Annotations to be added to InfluxDB pods
podAnnotations: {}

# Labels to be added to InfluxDB pods
podLabels: {}

ingress:
  enabled: true
  tls: true
  secretName: default-cert # only needed if tls above is true
  #hostname: milos.silver-samurai.nautilus-lab-uranium.com
  #className: null
  annotations:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    kubernetes.io/ingress.class: nginx-nautilus
    kubernetes.io/tls-acme: "true"
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/tls-acme: "true"
  path: /


## Add custom volume and volumeMounts
# volumes:
#   - name: ssl-cert-volume
#     secret:
#       secretName: secret-name
# mountPoints:
#   - name: ssl-cert-volume
#     mountPath: /etc/ssl/certs/selfsigned/
#     readOnly: true


## Additional containers to be added to the pod.
extraContainers: {}
#  - name: my-sidecar
#    image: nginx:latest

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
# - key: "key"
#   operator: "Equal|Exists"
#   value: "value"
#   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"

## The InfluxDB image uses several environment variables to automatically
## configure certain parts of the server.
## Ref: https://hub.docker.com/_/influxdb/
env: {}
## The name of a secret in the same kubernetes namespace which contain values
## to be added to the environment.
## This can be used, for example, to set the INFLUXDB_HTTP_SHARED_SECRET
## environment variable.
envFromSecret: {}

## InfluxDB configuration
## ref: https://docs.influxdata.com/influxdb/v1.7/administration/config
config:
  reporting_disabled: false
  rpc: {}
  meta: {}
  data: {}
  coordinator: {}
  retention: {}
  shard_precreation: {}
  monitor: {}
  http:
    auth-enabled: true
  logging: {}
  subscriber: {}
  graphite: {}
  collectd: {}
  opentsdb: {}
  udp: {}
  continuous_queries: {}
  tls: {}

# Allow executing custom init scripts
#
# If the container finds any files with the extensions .sh or .iql inside of the
# /docker-entrypoint-initdb.d folder, it will execute them. The order they are
# executed in is determined by the shell. This is usually alphabetical order.
initScripts:
  enabled: true
  scripts:
    init.iql: |+
      CREATE DATABASE "milos" WITH DURATION 2d REPLICATION 1 NAME "autogen"
backup:
  enabled: false
  persistence:
    enabled: false
backupRetention:
  enabled: false